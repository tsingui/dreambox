Index: linux-2.6.21/drivers/leds/Kconfig
===================================================================
--- linux-2.6.21.orig/drivers/leds/Kconfig	2009-05-14 17:42:42.000000000 +0200
+++ linux-2.6.21/drivers/leds/Kconfig	2009-05-14 17:43:15.000000000 +0200
@@ -26,6 +26,10 @@
 	  This option enables support for the LEDs on Sharp Zaurus
 	  SL-C7x0 series (C700, C750, C760, C860).
 
+config LEDS_RT3052
+	tristate "LED Support for the ralink rt3052"
+	depends on LEDS_CLASS && RALINK_RT3052
+
 config LEDS_LOCOMO
 	tristate "LED Support for Locomo device"
 	depends on LEDS_CLASS && SHARP_LOCOMO
Index: linux-2.6.21/drivers/leds/Makefile
===================================================================
--- linux-2.6.21.orig/drivers/leds/Makefile	2009-05-14 17:43:18.000000000 +0200
+++ linux-2.6.21/drivers/leds/Makefile	2009-05-14 17:43:39.000000000 +0200
@@ -16,6 +16,7 @@
 obj-$(CONFIG_LEDS_WRAP)			+= leds-wrap.o
 obj-$(CONFIG_LEDS_H1940)		+= leds-h1940.o
 obj-$(CONFIG_LEDS_COBALT)		+= leds-cobalt.o
+obj-$(CONFIG_LEDS_RT3052)		+= leds-rt3052.o
 
 # LED Triggers
 obj-$(CONFIG_LEDS_TRIGGER_TIMER)	+= ledtrig-timer.o
Index: linux-2.6.21/drivers/leds/leds-rt3052.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ linux-2.6.21/drivers/leds/leds-rt3052.c	2009-05-14 18:44:56.000000000 +0200
@@ -0,0 +1,127 @@
+/*
+ * LEDs driver for ralink rt3052 
+ *
+ * Copyright (C) 2009 John Crispin <john@phrozen.org>
+ *
+ * Based on leds-rt3052.c
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include <linux/kernel.h>
+#include <linux/init.h>
+#include <linux/platform_device.h>
+#include <linux/leds.h>
+#include <linux/err.h>
+#include <asm/io.h>
+#include "../char/ralink_gpio.h"
+
+#define DRVNAME "rt3052-led"
+
+static struct platform_device *pdev;
+
+static void rt3052_led_set7(struct led_classdev *led_cdev, enum led_brightness value)
+{
+	if (!value)
+		*(volatile u32 *)(RALINK_REG_PIOSET) = RALINK_GPIO(7);
+	else
+		*(volatile u32 *)(RALINK_REG_PIORESET) = RALINK_GPIO(7);
+}
+
+static void rt3052_led_set9(struct led_classdev *led_cdev, enum led_brightness value)
+{
+	if (!value)
+		*(volatile u32 *)(RALINK_REG_PIOSET) = RALINK_GPIO(9);
+	else
+		*(volatile u32 *)(RALINK_REG_PIORESET) = RALINK_GPIO(9);
+}
+
+static void rt3052_led_set11(struct led_classdev *led_cdev, enum led_brightness value)
+{
+	if (!value)
+		*(volatile u32 *)(RALINK_REG_PIOSET) = RALINK_GPIO(11);
+	else
+		*(volatile u32 *)(RALINK_REG_PIORESET) = RALINK_GPIO(11);
+}
+
+static void rt3052_led_set14(struct led_classdev *led_cdev, enum led_brightness value)
+{
+	if (!value)
+		*(volatile u32 *)(RALINK_REG_PIOSET) = RALINK_GPIO(14);
+	else
+		*(volatile u32 *)(RALINK_REG_PIORESET) = RALINK_GPIO(14);
+}
+
+static struct led_classdev rt3052_leds[4] = {
+	{
+		.name = "gpio7",
+		.brightness_set	= rt3052_led_set7,
+	}, {
+		.name = "gpio9",
+		.brightness_set = rt3052_led_set9,
+	}, {
+		.name = "gpio11",
+		.brightness_set	= rt3052_led_set11,
+	}, {
+		.name = "gpio14",
+		.brightness_set = rt3052_led_set14,
+	}
+};
+
+static int rt3052_led_probe(struct platform_device *pdev)
+{
+	int i;
+	unsigned long tmp = le32_to_cpu(*(volatile u32 *)(RALINK_REG_PIODIR));
+
+	tmp |= RALINK_GPIO(7) | RALINK_GPIO(9) | RALINK_GPIO(11) | RALINK_GPIO(14);
+	*(volatile u32 *)(RALINK_REG_PIODIR) = tmp;
+
+	for(i = 0; i < 4; i++)
+		led_classdev_register(&pdev->dev, &rt3052_leds[i]);
+
+	return 0;
+}
+
+static int rt3052_led_remove(struct platform_device *pdev)
+{
+	int i;
+	for(i = 0; i < 4; i++)
+		led_classdev_unregister(&rt3052_leds[i]);
+	return 0;
+}
+
+static struct platform_driver rt3052_led_driver = {
+	.probe		= rt3052_led_probe,
+	.remove		= rt3052_led_remove,
+	.driver		= {
+		.name		= DRVNAME,
+		.owner		= THIS_MODULE,
+	},
+};
+
+static int __init rt3052_led_init(void)
+{
+	int ret;
+
+	ret = platform_driver_register(&rt3052_led_driver);
+	if (ret < 0)
+		goto out;
+out:
+	return ret;
+}
+
+static void __exit rt3052_led_exit(void)
+{
+	platform_device_unregister(pdev);
+	platform_driver_unregister(&rt3052_led_driver);
+}
+
+module_init(rt3052_led_init);
+module_exit(rt3052_led_exit);
+
+MODULE_AUTHOR("John Crispin <john@phrozen.org>");
+MODULE_DESCRIPTION("Ralink LED Driver");
+MODULE_LICENSE("GPL");
+
