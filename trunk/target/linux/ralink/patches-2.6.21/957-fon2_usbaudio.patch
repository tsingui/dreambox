Index: linux-2.6.21/sound/usb/usbaudio.c
===================================================================
--- linux-2.6.21.orig/sound/usb/usbaudio.c	2007-04-26 05:08:32.000000000 +0200
+++ linux-2.6.21/sound/usb/usbaudio.c	2009-07-17 16:00:00.000000000 +0200
@@ -54,6 +54,15 @@
 #include <sound/pcm_params.h>
 #include <sound/initval.h>
 
+#include <linux/module.h>
+#include <linux/timer.h>
+#include <linux/interrupt.h>
+#include <linux/kobject.h>
+#include <linux/workqueue.h>
+#include <linux/skbuff.h>
+#include <linux/netlink.h>
+#include <net/sock.h>
+#include <asm/uaccess.h>
 #include "usbaudio.h"
 
 
@@ -3618,6 +3627,57 @@
 	}
 }
 
+struct event_t {
+	struct work_struct wq;
+	int set;
+	unsigned long jiffies;
+};
+
+static inline void add_msg_lp(struct sk_buff *skb, char *msg)
+{
+	char *scratch;
+	scratch = skb_put(skb, strlen(msg) + 1);
+	sprintf(scratch, msg);
+}
+
+extern struct sock *uevent_sock;
+extern u64 uevent_next_seqnum(void);
+static void hotplug_audio(int connect)
+{
+	struct sk_buff *skb;
+	size_t len;
+	char *scratch, *s;
+	char buf[128];
+
+	if (!uevent_sock)
+		goto done;
+
+	/* allocate message with the maximum possible size */
+	s = connect ? "add" : "remove";
+	len = strlen(s) + 2;
+	skb = alloc_skb(len + 2048, GFP_KERNEL);
+	if (!skb)
+		goto done;
+
+	/* add header */
+	scratch = skb_put(skb, len);
+	sprintf(scratch, "%s@",s);
+
+	/* copy keys to our continuous event payload buffer */
+	add_msg_lp(skb, "HOME=/");
+	add_msg_lp(skb, "PATH=/sbin:/bin:/usr/sbin:/usr/bin");
+	add_msg_lp(skb, "SUBSYSTEM=audio");
+	add_msg_lp(skb, (connect ? "ACTION=add" : "ACTION=released"));
+	snprintf(buf, 128, "SEQNUM=%llu", uevent_next_seqnum());
+	add_msg_lp(skb, buf);
+
+	NETLINK_CB(skb).dst_group = 1;
+	netlink_broadcast(uevent_sock, skb, 0, 1, GFP_KERNEL);
+
+done:
+	return;
+}
+
 /*
  * new 2.5 USB kernel API
  */
@@ -3628,6 +3688,7 @@
 	chip = snd_usb_audio_probe(interface_to_usbdev(intf), intf, id);
 	if (chip) {
 		dev_set_drvdata(&intf->dev, chip);
+		hotplug_audio(1);
 		return 0;
 	} else
 		return -EIO;
@@ -3635,6 +3696,7 @@
 
 static void usb_audio_disconnect(struct usb_interface *intf)
 {
+	hotplug_audio(0);
 	snd_usb_audio_disconnect(interface_to_usbdev(intf),
 				 dev_get_drvdata(&intf->dev));
 }
